{"ast":null,"code":"/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n  var hasDefaultValue = arguments.length >= 2;\n  return function (source) {\n    return source.pipe(predicate ? filter(function (v, i) {\n      return predicate(v, i, source);\n    }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () {\n      return new EmptyError();\n    }));\n  };\n}","map":{"version":3,"mappings":"AAGA;AAEA,SAASA,UAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAmB,UAAnB;AACA,SAASC,QAAT,QAAuB,YAAvB;AACA,SAASC,YAAT,QAAyB,gBAAzB;AACA,SAASC,cAAT,QAAyB,kBAAzB;AAkCA,SAAMC,QAAN,QACE,kBADF;OAIE,SAAMC,IAAN,CAAMC,SAAN,EAAwBC,YAAxB,EAA4C;AAC5C,qBAAQ,YAA0B,OAA1B,IAAiC,CAAzC;AAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","names":["EmptyError","filter","takeLast","throwIfEmpty","defaultIfEmpty","identity","last","predicate","defaultValue"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\operators\\last.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { Operator } from '../Operator';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { EmptyError } from '../util/EmptyError';\r\nimport { OperatorFunction } from '../../internal/types';\r\nimport { filter } from './filter';\r\nimport { takeLast } from './takeLast';\r\nimport { throwIfEmpty } from './throwIfEmpty';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { identity } from '../util/identity';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function last<T, D = T>(\r\n  predicate?: null,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D>;\r\nexport function last<T, S extends T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue?: S\r\n): OperatorFunction<T, S>;\r\nexport function last<T, D = T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Returns an Observable that emits only the last item emitted by the source Observable.\r\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\r\n * the last item from the source Observable, the resulting Observable will emit the last item\r\n * from the source Observable that satisfies the predicate.\r\n *\r\n * ![](last.png)\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\r\n * @param {any} [defaultValue] - An optional default value to provide if last\r\n * predicate isn't met or no values were emitted.\r\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\r\n * from the source, or an NoSuchElementException if no such items are emitted.\r\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\r\n */\r\nexport function last<T, D>(\r\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D> {\r\n  const hasDefaultValue = arguments.length >= 2;\r\n  return (source: Observable<T>) => source.pipe(\r\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\r\n    takeLast(1),\r\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}