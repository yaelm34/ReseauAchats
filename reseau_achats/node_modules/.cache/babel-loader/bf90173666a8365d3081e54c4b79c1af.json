{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar error_1 = require(\"../error\");\n\nvar ERROR = 'error';\nvar WARN = 'warn';\nvar INFO = 'info';\nvar DEBUG = 'debug';\nvar DEFAULT_LEVEL = INFO;\nvar levels = (_a = {}, _a[ERROR] = 0, _a[WARN] = 1, _a[INFO] = 2, _a[DEBUG] = 3, _a);\n/**\r\n * Logger used by the driver to notify about various internal events. Single logger should be used per driver.\r\n */\n\nvar Logger =\n/** @class */\nfunction () {\n  /**\r\n   * @constructor\r\n   * @param {string} level the enabled logging level.\r\n   * @param {function(level: string, message: string)} loggerFunction the function to write the log level and message.\r\n   */\n  function Logger(level, loggerFunction) {\n    this._level = level;\n    this._loggerFunction = loggerFunction;\n  }\n  /**\r\n   * Create a new logger based on the given driver configuration.\r\n   * @param {Object} driverConfig the driver configuration as supplied by the user.\r\n   * @return {Logger} a new logger instance or a no-op logger when not configured.\r\n   */\n\n\n  Logger.create = function (driverConfig) {\n    if (driverConfig && driverConfig.logging) {\n      var loggingConfig = driverConfig.logging;\n      var level = extractConfiguredLevel(loggingConfig);\n      var loggerFunction = extractConfiguredLogger(loggingConfig);\n      return new Logger(level, loggerFunction);\n    }\n\n    return this.noOp();\n  };\n  /**\r\n   * Create a no-op logger implementation.\r\n   * @return {Logger} the no-op logger implementation.\r\n   */\n\n\n  Logger.noOp = function () {\n    return noOpLogger;\n  };\n  /**\r\n   * Check if error logging is enabled, i.e. it is not a no-op implementation.\r\n   * @return {boolean} `true` when enabled, `false` otherwise.\r\n   */\n\n\n  Logger.prototype.isErrorEnabled = function () {\n    return isLevelEnabled(this._level, ERROR);\n  };\n  /**\r\n   * Log an error message.\r\n   * @param {string} message the message to log.\r\n   */\n\n\n  Logger.prototype.error = function (message) {\n    if (this.isErrorEnabled()) {\n      this._loggerFunction(ERROR, message);\n    }\n  };\n  /**\r\n   * Check if warn logging is enabled, i.e. it is not a no-op implementation.\r\n   * @return {boolean} `true` when enabled, `false` otherwise.\r\n   */\n\n\n  Logger.prototype.isWarnEnabled = function () {\n    return isLevelEnabled(this._level, WARN);\n  };\n  /**\r\n   * Log an warning message.\r\n   * @param {string} message the message to log.\r\n   */\n\n\n  Logger.prototype.warn = function (message) {\n    if (this.isWarnEnabled()) {\n      this._loggerFunction(WARN, message);\n    }\n  };\n  /**\r\n   * Check if info logging is enabled, i.e. it is not a no-op implementation.\r\n   * @return {boolean} `true` when enabled, `false` otherwise.\r\n   */\n\n\n  Logger.prototype.isInfoEnabled = function () {\n    return isLevelEnabled(this._level, INFO);\n  };\n  /**\r\n   * Log an info message.\r\n   * @param {string} message the message to log.\r\n   */\n\n\n  Logger.prototype.info = function (message) {\n    if (this.isInfoEnabled()) {\n      this._loggerFunction(INFO, message);\n    }\n  };\n  /**\r\n   * Check if debug logging is enabled, i.e. it is not a no-op implementation.\r\n   * @return {boolean} `true` when enabled, `false` otherwise.\r\n   */\n\n\n  Logger.prototype.isDebugEnabled = function () {\n    return isLevelEnabled(this._level, DEBUG);\n  };\n  /**\r\n   * Log a debug message.\r\n   * @param {string} message the message to log.\r\n   */\n\n\n  Logger.prototype.debug = function (message) {\n    if (this.isDebugEnabled()) {\n      this._loggerFunction(DEBUG, message);\n    }\n  };\n\n  return Logger;\n}();\n\nexports.Logger = Logger;\n\nvar NoOpLogger =\n/** @class */\nfunction (_super) {\n  __extends(NoOpLogger, _super);\n\n  function NoOpLogger() {\n    return _super.call(this, INFO, function (level, message) {}) || this;\n  }\n\n  NoOpLogger.prototype.isErrorEnabled = function () {\n    return false;\n  };\n\n  NoOpLogger.prototype.error = function (message) {};\n\n  NoOpLogger.prototype.isWarnEnabled = function () {\n    return false;\n  };\n\n  NoOpLogger.prototype.warn = function (message) {};\n\n  NoOpLogger.prototype.isInfoEnabled = function () {\n    return false;\n  };\n\n  NoOpLogger.prototype.info = function (message) {};\n\n  NoOpLogger.prototype.isDebugEnabled = function () {\n    return false;\n  };\n\n  NoOpLogger.prototype.debug = function (message) {};\n\n  return NoOpLogger;\n}(Logger);\n\nvar noOpLogger = new NoOpLogger();\n/**\r\n * Check if the given logging level is enabled.\r\n * @param {string} configuredLevel the configured level.\r\n * @param {string} targetLevel the level to check.\r\n * @return {boolean} value of `true` when enabled, `false` otherwise.\r\n */\n\nfunction isLevelEnabled(configuredLevel, targetLevel) {\n  return levels[configuredLevel] >= levels[targetLevel];\n}\n/**\r\n * Extract the configured logging level from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {string} the configured log level or default when none configured.\r\n */\n\n\nfunction extractConfiguredLevel(loggingConfig) {\n  if (loggingConfig && loggingConfig.level) {\n    var configuredLevel = loggingConfig.level;\n    var value = levels[configuredLevel];\n\n    if (!value && value !== 0) {\n      throw (0, error_1.newError)(\"Illegal logging level: \" + configuredLevel + \". Supported levels are: \" + Object.keys(levels));\n    }\n\n    return configuredLevel;\n  }\n\n  return DEFAULT_LEVEL;\n}\n/**\r\n * Extract the configured logger function from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {function(level: string, message: string)} the configured logging function.\r\n */\n\n\nfunction extractConfiguredLogger(loggingConfig) {\n  if (loggingConfig && loggingConfig.logger) {\n    var configuredLogger = loggingConfig.logger;\n\n    if (configuredLogger && typeof configuredLogger === 'function') {\n      return configuredLogger;\n    }\n  }\n\n  throw (0, error_1.newError)(\"Illegal logger function: \" + loggingConfig.logger);\n}","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-core/lib/internal/logger.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","_a","defineProperty","exports","value","Logger","error_1","require","ERROR","WARN","INFO","DEBUG","DEFAULT_LEVEL","levels","level","loggerFunction","_level","_loggerFunction","driverConfig","logging","loggingConfig","extractConfiguredLevel","extractConfiguredLogger","noOp","noOpLogger","isErrorEnabled","isLevelEnabled","error","message","isWarnEnabled","warn","isInfoEnabled","info","isDebugEnabled","debug","NoOpLogger","_super","configuredLevel","targetLevel","newError","keys","logger","configuredLogger"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Logger = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar error_1 = require(\"../error\");\r\nvar ERROR = 'error';\r\nvar WARN = 'warn';\r\nvar INFO = 'info';\r\nvar DEBUG = 'debug';\r\nvar DEFAULT_LEVEL = INFO;\r\nvar levels = (_a = {},\r\n    _a[ERROR] = 0,\r\n    _a[WARN] = 1,\r\n    _a[INFO] = 2,\r\n    _a[DEBUG] = 3,\r\n    _a);\r\n/**\r\n * Logger used by the driver to notify about various internal events. Single logger should be used per driver.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {string} level the enabled logging level.\r\n     * @param {function(level: string, message: string)} loggerFunction the function to write the log level and message.\r\n     */\r\n    function Logger(level, loggerFunction) {\r\n        this._level = level;\r\n        this._loggerFunction = loggerFunction;\r\n    }\r\n    /**\r\n     * Create a new logger based on the given driver configuration.\r\n     * @param {Object} driverConfig the driver configuration as supplied by the user.\r\n     * @return {Logger} a new logger instance or a no-op logger when not configured.\r\n     */\r\n    Logger.create = function (driverConfig) {\r\n        if (driverConfig && driverConfig.logging) {\r\n            var loggingConfig = driverConfig.logging;\r\n            var level = extractConfiguredLevel(loggingConfig);\r\n            var loggerFunction = extractConfiguredLogger(loggingConfig);\r\n            return new Logger(level, loggerFunction);\r\n        }\r\n        return this.noOp();\r\n    };\r\n    /**\r\n     * Create a no-op logger implementation.\r\n     * @return {Logger} the no-op logger implementation.\r\n     */\r\n    Logger.noOp = function () {\r\n        return noOpLogger;\r\n    };\r\n    /**\r\n     * Check if error logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isErrorEnabled = function () {\r\n        return isLevelEnabled(this._level, ERROR);\r\n    };\r\n    /**\r\n     * Log an error message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.error = function (message) {\r\n        if (this.isErrorEnabled()) {\r\n            this._loggerFunction(ERROR, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if warn logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isWarnEnabled = function () {\r\n        return isLevelEnabled(this._level, WARN);\r\n    };\r\n    /**\r\n     * Log an warning message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.warn = function (message) {\r\n        if (this.isWarnEnabled()) {\r\n            this._loggerFunction(WARN, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if info logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isInfoEnabled = function () {\r\n        return isLevelEnabled(this._level, INFO);\r\n    };\r\n    /**\r\n     * Log an info message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.info = function (message) {\r\n        if (this.isInfoEnabled()) {\r\n            this._loggerFunction(INFO, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if debug logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isDebugEnabled = function () {\r\n        return isLevelEnabled(this._level, DEBUG);\r\n    };\r\n    /**\r\n     * Log a debug message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.debug = function (message) {\r\n        if (this.isDebugEnabled()) {\r\n            this._loggerFunction(DEBUG, message);\r\n        }\r\n    };\r\n    return Logger;\r\n}());\r\nexports.Logger = Logger;\r\nvar NoOpLogger = /** @class */ (function (_super) {\r\n    __extends(NoOpLogger, _super);\r\n    function NoOpLogger() {\r\n        return _super.call(this, INFO, function (level, message) { }) || this;\r\n    }\r\n    NoOpLogger.prototype.isErrorEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.error = function (message) { };\r\n    NoOpLogger.prototype.isWarnEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.warn = function (message) { };\r\n    NoOpLogger.prototype.isInfoEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.info = function (message) { };\r\n    NoOpLogger.prototype.isDebugEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.debug = function (message) { };\r\n    return NoOpLogger;\r\n}(Logger));\r\nvar noOpLogger = new NoOpLogger();\r\n/**\r\n * Check if the given logging level is enabled.\r\n * @param {string} configuredLevel the configured level.\r\n * @param {string} targetLevel the level to check.\r\n * @return {boolean} value of `true` when enabled, `false` otherwise.\r\n */\r\nfunction isLevelEnabled(configuredLevel, targetLevel) {\r\n    return levels[configuredLevel] >= levels[targetLevel];\r\n}\r\n/**\r\n * Extract the configured logging level from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {string} the configured log level or default when none configured.\r\n */\r\nfunction extractConfiguredLevel(loggingConfig) {\r\n    if (loggingConfig && loggingConfig.level) {\r\n        var configuredLevel = loggingConfig.level;\r\n        var value = levels[configuredLevel];\r\n        if (!value && value !== 0) {\r\n            throw (0, error_1.newError)(\"Illegal logging level: \" + configuredLevel + \". Supported levels are: \" + Object.keys(levels));\r\n        }\r\n        return configuredLevel;\r\n    }\r\n    return DEFAULT_LEVEL;\r\n}\r\n/**\r\n * Extract the configured logger function from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {function(level: string, message: string)} the configured logging function.\r\n */\r\nfunction extractConfiguredLogger(loggingConfig) {\r\n    if (loggingConfig && loggingConfig.logger) {\r\n        var configuredLogger = loggingConfig.logger;\r\n        if (configuredLogger && typeof configuredLogger === 'function') {\r\n            return configuredLogger;\r\n        }\r\n    }\r\n    throw (0, error_1.newError)(\"Illegal logger function: \" + loggingConfig.logger);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}