{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\nvar SimpleInnerSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SimpleInnerSubscriber, _super);\n\n  function SimpleInnerSubscriber(parent) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  SimpleInnerSubscriber.prototype._next = function (value) {\n    this.parent.notifyNext(value);\n  };\n\n  SimpleInnerSubscriber.prototype._error = function (error) {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  };\n\n  SimpleInnerSubscriber.prototype._complete = function () {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  };\n\n  return SimpleInnerSubscriber;\n}(Subscriber);\n\nexport { SimpleInnerSubscriber };\n\nvar ComplexInnerSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ComplexInnerSubscriber, _super);\n\n  function ComplexInnerSubscriber(parent, outerValue, outerIndex) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    _this.outerValue = outerValue;\n    _this.outerIndex = outerIndex;\n    return _this;\n  }\n\n  ComplexInnerSubscriber.prototype._next = function (value) {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  };\n\n  ComplexInnerSubscriber.prototype._error = function (error) {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  };\n\n  ComplexInnerSubscriber.prototype._complete = function () {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  };\n\n  return ComplexInnerSubscriber;\n}(Subscriber);\n\nexport { ComplexInnerSubscriber };\n\nvar SimpleOuterSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SimpleOuterSubscriber, _super);\n\n  function SimpleOuterSubscriber() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n\n  SimpleOuterSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n\n  SimpleOuterSubscriber.prototype.notifyComplete = function () {\n    this.destination.complete();\n  };\n\n  return SimpleOuterSubscriber;\n}(Subscriber);\n\nexport { SimpleOuterSubscriber };\n\nvar ComplexOuterSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ComplexOuterSubscriber, _super);\n\n  function ComplexOuterSubscriber() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {\n    this.destination.next(innerValue);\n  };\n\n  ComplexOuterSubscriber.prototype.notifyError = function (error) {\n    this.destination.error(error);\n  };\n\n  ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {\n    this.destination.complete();\n  };\n\n  return ComplexOuterSubscriber;\n}(Subscriber);\n\nexport { ComplexOuterSubscriber };\nexport function innerSubscribe(result, innerSubscriber) {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n\n  var subscription;\n\n  try {\n    subscription = subscribeTo(result)(innerSubscriber);\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n\n  return subscription;\n}","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAAsB,cAAtB;AAmBA;;IAA8CC,+CAAaC,MAAb,EAAa;AACzDJ,2CAA0DI,MAA1D;;WAAAD,sBACEE,QAAO;AADW,gBAAMD,MAAN,KAAM,CAAgC,IAAhC,KAAgC,IAAtC;;;AAEnB;AAES;;uBACI,WAAgBE,QAAE;AAC/B;AAES;;uBACI,WAAYC,SAAO;AAC/B,SAAKF,MAAL,CAAKG,WAAL,CAAmBC,KAAnB;AACD;AAES;;uBACI,WAAgBC,YAAC;AAC7B,SAAKL,MAAL,CAAKM,cAAL;AACD;AACH;;AAlB8C;CAAA;;AAoB9C;;IAAkDC,gDAAaR,MAAb,EAAa;AAC7DJ,4CAAiEI,MAAjE;;WAAAQ,uBACEP,QAAOQ,YACRC;AAFmB,gBAAMV,MAAN,KAAM,CAA8B,IAA9B,KAA8B,IAApC;;AAA6CW;AAAsBA;;AAEtF;AAES;;wBACI,WAAgBT,kBAAmBU,KAAnB,EAAwB;AACrD;AAES;;wBACI,WAAiBT,SAAE;AAC/B,SAAKF,MAAL,CAAKG,WAAL,CAAmBC,KAAnB;AACD;AAES;;wBACI,WAAeC,YAAM;AACjC,SAAKL,MAAL,CAAKM,cAAL,CAAmB,IAAnB;AACD;AACH;;AAlBkD;CAAA;;AAoBlD;;IAAiDM,+CAAab,MAAb,EAAa;AAA9DJ;;;AAYC;AAXC;;uBACmB,WAAKkB,aAAY;AACnC;AAED;;uBACmB,WAAWV;AAC7B;AAED;;uBACmB,WAAWG;AAC7B;AACH;;AAZiD;CAAA;;AAmBjD;;IAAkDQ,gDAAaf,MAAb,EAAa;AAA/DJ;;;AAqBC;AAdC;;wBACmB,WAAKkB,aAAY;AACnC;AAED;;wBACmB,WAAYV,cAAC;AAC/B;AAKD;;wBACmB,WAAWG;AAC7B;AACH;;AArBkD;CAAA;;AAuBlD,SAAMQ,sBAAN;OACE,SAAIC,cAAJ,CAA0BC,MAA1B,EAA4BC,eAA5B,EAA4B;MAC1BA,eAAO,CAASC,QAAC;AAClB;AACD;;MACEF,kBAAcnB,YAAU;AACzB;AACD;;AACA,MAAIsB,YAAJ;;MACE;AACDA;AAAC,WACAf;AACDa;AACD;;AACD","names":["tslib_1","Subscriber","Observable","SimpleInnerSubscriber","_super","parent","_next","_error","notifyError","error","_complete","notifyComplete","ComplexInnerSubscriber","outerValue","outerIndex","_this","value","SimpleOuterSubscriber","notifyNext","ComplexOuterSubscriber","innerSubscribe","result","innerSubscriber","closed","subscription"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\innerSubscribe.ts"],"sourcesContent":["/** @prettier */\r\nimport { Subscription } from './Subscription';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Observable } from './Observable';\r\nimport { subscribeTo } from './util/subscribeTo';\r\n\r\ninterface SimpleOuterSubscriberLike<T> {\r\n  /**\r\n   * A handler for inner next notifications from the inner subscription\r\n   * @param innerValue the value nexted by the inner producer\r\n   */\r\n  notifyNext(innerValue: T): void;\r\n  /**\r\n   * A handler for inner error notifications from the inner subscription\r\n   * @param err the error from the inner producer\r\n   */\r\n  notifyError(err: any): void;\r\n  /**\r\n   * A handler for inner complete notifications from the inner subscription.\r\n   */\r\n  notifyComplete(): void;\r\n}\r\n\r\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\r\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\r\n    super();\r\n  }\r\n\r\n  protected _next(value: T): void {\r\n    this.parent.notifyNext(value);\r\n  }\r\n\r\n  protected _error(error: any): void {\r\n    this.parent.notifyError(error);\r\n    this.unsubscribe();\r\n  }\r\n\r\n  protected _complete(): void {\r\n    this.parent.notifyComplete();\r\n    this.unsubscribe();\r\n  }\r\n}\r\n\r\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\r\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\r\n    super();\r\n  }\r\n\r\n  protected _next(value: R): void {\r\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\r\n  }\r\n\r\n  protected _error(error: any): void {\r\n    this.parent.notifyError(error);\r\n    this.unsubscribe();\r\n  }\r\n\r\n  protected _complete(): void {\r\n    this.parent.notifyComplete(this);\r\n    this.unsubscribe();\r\n  }\r\n}\r\n\r\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\r\n  notifyNext(innerValue: R): void {\r\n    this.destination.next(innerValue);\r\n  }\r\n\r\n  notifyError(err: any): void {\r\n    this.destination.error(err);\r\n  }\r\n\r\n  notifyComplete(): void {\r\n    this.destination.complete();\r\n  }\r\n}\r\n\r\n/**\r\n * DO NOT USE (formerly \"OuterSubscriber\")\r\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\r\n * periods of time.\r\n */\r\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\r\n  /**\r\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\r\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\r\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\r\n   * @param _innerSub Used by: delayWhen\r\n   */\r\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\r\n    this.destination.next(innerValue);\r\n  }\r\n\r\n  notifyError(error: any): void {\r\n    this.destination.error(error);\r\n  }\r\n\r\n  /**\r\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\r\n   */\r\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\r\n    this.destination.complete();\r\n  }\r\n}\r\n\r\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\r\n  if (innerSubscriber.closed) {\r\n    return undefined;\r\n  }\r\n  if (result instanceof Observable) {\r\n    return result.subscribe(innerSubscriber);\r\n  }\r\n  let subscription: Subscription;\r\n  try {\r\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\r\n  } catch (error) {\r\n    innerSubscriber.error(error);\r\n  }\r\n  return subscription;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}