{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar _a = neo4j_driver_core_1.internal.util,\n    ENCRYPTION_OFF = _a.ENCRYPTION_OFF,\n    ENCRYPTION_ON = _a.ENCRYPTION_ON; // Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\n\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\n\nvar WebSocketChannel =\n/** @class */\nfunction () {\n  /**\n   * Create new instance\n   * @param {ChannelConfig} config - configuration for this channel.\n   * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n   */\n  function WebSocketChannel(config, protocolSupplier, socketFactory) {\n    if (protocolSupplier === void 0) {\n      protocolSupplier = detectWebPageProtocol;\n    }\n\n    if (socketFactory === void 0) {\n      socketFactory = function (url) {\n        return new WebSocket(url);\n      };\n    }\n\n    this._open = true;\n    this._pending = [];\n    this._error = null;\n    this._handleConnectionError = this._handleConnectionError.bind(this);\n    this._config = config;\n\n    var _a = determineWebSocketScheme(config, protocolSupplier),\n        scheme = _a.scheme,\n        error = _a.error;\n\n    if (error) {\n      this._error = error;\n      return;\n    }\n\n    this._ws = createWebSocket(scheme, config.address, socketFactory);\n    this._ws.binaryType = 'arraybuffer';\n    var self = this; // All connection errors are not sent to the error handler\n    // we must also check for dirty close calls\n\n    this._ws.onclose = function (e) {\n      if (e && !e.wasClean) {\n        self._handleConnectionError();\n      }\n\n      self._open = false;\n    };\n\n    this._ws.onopen = function () {\n      // Connected! Cancel the connection timeout\n      self._clearConnectionTimeout(); // Drain all pending messages\n\n\n      var pending = self._pending;\n      self._pending = null;\n\n      for (var i = 0; i < pending.length; i++) {\n        self.write(pending[i]);\n      }\n    };\n\n    this._ws.onmessage = function (event) {\n      if (self.onmessage) {\n        var b = new channel_buf_1.default(event.data);\n        self.onmessage(b);\n      }\n    };\n\n    this._ws.onerror = this._handleConnectionError;\n    this._connectionTimeoutFired = false;\n    this._connectionTimeoutId = this._setupConnectionTimeout();\n  }\n\n  WebSocketChannel.prototype._handleConnectionError = function () {\n    if (this._connectionTimeoutFired) {\n      // timeout fired - not connected within configured time\n      this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n\n      return;\n    } // onerror triggers on websocket close as well.. don't get me started.\n\n\n    if (this._open) {\n      // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n      this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' + 'constraints in your web browser, the reason for the failure is not available ' + 'to this Neo4j Driver. Please use your browsers development console to determine ' + 'the root cause of the failure. Common reasons include the database being ' + 'unavailable, using the wrong connection URL or temporary network problems. ' + 'If you have enabled encryption, ensure your browser is configured to trust the ' + 'certificate Neo4j is configured to use. WebSocket `readyState` is: ' + this._ws.readyState, this._config.connectionErrorCode);\n\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n    }\n  };\n  /**\n   * Write the passed in buffer to connection\n   * @param {ChannelBuffer} buffer - Buffer to write\n   */\n\n\n  WebSocketChannel.prototype.write = function (buffer) {\n    // If there is a pending queue, push this on that queue. This means\n    // we are not yet connected, so we queue things locally.\n    if (this._pending !== null) {\n      this._pending.push(buffer);\n    } else if (buffer instanceof channel_buf_1.default) {\n      try {\n        this._ws.send(buffer._buffer);\n      } catch (error) {\n        if (this._ws.readyState !== WS_OPEN) {\n          // Websocket has been closed\n          this._handleConnectionError();\n        } else {\n          // Some other error occured\n          throw error;\n        }\n      }\n    } else {\n      throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n    }\n  };\n  /**\n   * Close the connection\n   * @returns {Promise} A promise that will be resolved after channel is closed\n   */\n\n\n  WebSocketChannel.prototype.close = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n        _this._open = false;\n\n        _this._clearConnectionTimeout();\n\n        _this._ws.onclose = function () {\n          return resolve();\n        };\n\n        _this._ws.close();\n      } else {\n        resolve();\n      }\n    });\n  };\n  /**\n   * Setup the receive timeout for the channel.\n   *\n   * Not supported for the browser channel.\n   *\n   * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n   * @returns {void}\n   */\n\n\n  WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) {};\n  /**\n   * Set connection timeout on the given WebSocket, if configured.\n   * @return {number} the timeout id or null.\n   * @private\n   */\n\n\n  WebSocketChannel.prototype._setupConnectionTimeout = function () {\n    var _this = this;\n\n    var timeout = this._config.connectionTimeout;\n\n    if (timeout) {\n      var webSocket_1 = this._ws;\n      return setTimeout(function () {\n        if (webSocket_1.readyState !== WS_OPEN) {\n          _this._connectionTimeoutFired = true;\n          webSocket_1.close();\n        }\n      }, timeout);\n    }\n\n    return null;\n  };\n  /**\n   * Remove active connection timeout, if any.\n   * @private\n   */\n\n\n  WebSocketChannel.prototype._clearConnectionTimeout = function () {\n    var timeoutId = this._connectionTimeoutId;\n\n    if (timeoutId || timeoutId === 0) {\n      this._connectionTimeoutFired = false;\n      this._connectionTimeoutId = null;\n      clearTimeout(timeoutId);\n    }\n  };\n\n  return WebSocketChannel;\n}();\n\nexports.default = WebSocketChannel;\n\nfunction createWebSocket(scheme, address, socketFactory) {\n  var url = scheme + '://' + address.asHostPort();\n\n  try {\n    return socketFactory(url);\n  } catch (error) {\n    if (isIPv6AddressIssueOnWindows(error, address)) {\n      // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n      // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n      // and Windows requires IPv6 to be changes in the following way:\n      //   1) replace all ':' with '-'\n      //   2) replace '%' with 's' for link-local address\n      //   3) append '.ipv6-literal.net' suffix\n      // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n      // For more details see:\n      //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n      //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n      // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n      // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n      var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n      return socketFactory(windowsFriendlyUrl);\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction isIPv6AddressIssueOnWindows(error, address) {\n  return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\n\nfunction isIPv6Address(hostAndPort) {\n  return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\n\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n  // replace all ':' with '-'\n  var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-'); // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n\n  var hostWithoutPercent = hostWithoutColons.replace('%', 's'); // append magic '.ipv6-literal.net' suffix\n\n  var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n  return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\n\n\nfunction determineWebSocketScheme(config, protocolSupplier) {\n  var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n  var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n  var trust = config.trust;\n  var secureProtocol = isProtocolSecure(protocolSupplier);\n  verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n\n  if (encryptionOff) {\n    // encryption explicitly turned off in the config\n    return {\n      scheme: 'ws',\n      error: null\n    };\n  }\n\n  if (secureProtocol) {\n    // driver is used in a secure https web page, use 'wss'\n    return {\n      scheme: 'wss',\n      error: null\n    };\n  }\n\n  if (encryptionOn) {\n    // encryption explicitly requested in the config\n    if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n      // trust strategy not specified or the only supported strategy is specified\n      return {\n        scheme: 'wss',\n        error: null\n      };\n    } else {\n      var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' + \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" + trust + ' is not supported. Please ' + 'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' + '`encrypted:\"' + ENCRYPTION_OFF + '\"` in the driver configuration.');\n      return {\n        scheme: null,\n        error: error\n      };\n    }\n  } // default to unencrypted web socket\n\n\n  return {\n    scheme: 'ws',\n    error: null\n  };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\n\n\nfunction isEncryptionExplicitlyTurnedOn(config) {\n  return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\n\n\nfunction isEncryptionExplicitlyTurnedOff(config) {\n  return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\n\n\nfunction isProtocolSecure(protocolSupplier) {\n  var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n  return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\n\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n  if (secureProtocol === null) {// do nothing sice the protocol could not be identified\n  } else if (encryptionOn && !secureProtocol) {\n    // encryption explicitly turned on for a driver used on a HTTP web page\n    console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to not use encryption.');\n  } else if (encryptionOff && secureProtocol) {\n    // encryption explicitly turned off for a driver used on a HTTPS web page\n    console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to use encryption.');\n  }\n}\n\nfunction detectWebPageProtocol() {\n  return typeof window !== 'undefined' && window.location ? window.location.protocol : null;\n}","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-bolt-connection/lib/channel/browser/browser-channel.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","channel_buf_1","require","neo4j_driver_core_1","_a","internal","util","ENCRYPTION_OFF","ENCRYPTION_ON","WS_CONNECTING","WS_OPEN","WS_CLOSING","WS_CLOSED","WebSocketChannel","config","protocolSupplier","socketFactory","detectWebPageProtocol","url","WebSocket","_open","_pending","_error","_handleConnectionError","bind","_config","determineWebSocketScheme","scheme","error","_ws","createWebSocket","address","binaryType","self","onclose","e","wasClean","onopen","_clearConnectionTimeout","pending","i","length","write","onmessage","event","b","default","data","onerror","_connectionTimeoutFired","_connectionTimeoutId","_setupConnectionTimeout","prototype","newError","connectionTimeout","connectionErrorCode","readyState","buffer","push","send","_buffer","close","_this","Promise","resolve","reject","setupReceiveTimeout","receiveTimeout","timeout","webSocket_1","setTimeout","timeoutId","clearTimeout","asHostPort","isIPv6AddressIssueOnWindows","windowsFriendlyUrl","asWindowsFriendlyIPv6Address","name","isIPv6Address","hostAndPort","charAt","indexOf","hostWithoutColons","host","replace","RegExp","hostWithoutPercent","ipv6Host","port","encryptionOn","isEncryptionExplicitlyTurnedOn","encryptionOff","isEncryptionExplicitlyTurnedOff","trust","secureProtocol","isProtocolSecure","verifyEncryptionSettings","encrypted","protocol","toLowerCase","console","warn","window","location"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\n// Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\nvar WebSocketChannel = /** @class */ (function () {\n    /**\n     * Create new instance\n     * @param {ChannelConfig} config - configuration for this channel.\n     * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n     */\n    function WebSocketChannel(config, protocolSupplier, socketFactory) {\n        if (protocolSupplier === void 0) { protocolSupplier = detectWebPageProtocol; }\n        if (socketFactory === void 0) { socketFactory = function (url) { return new WebSocket(url); }; }\n        this._open = true;\n        this._pending = [];\n        this._error = null;\n        this._handleConnectionError = this._handleConnectionError.bind(this);\n        this._config = config;\n        var _a = determineWebSocketScheme(config, protocolSupplier), scheme = _a.scheme, error = _a.error;\n        if (error) {\n            this._error = error;\n            return;\n        }\n        this._ws = createWebSocket(scheme, config.address, socketFactory);\n        this._ws.binaryType = 'arraybuffer';\n        var self = this;\n        // All connection errors are not sent to the error handler\n        // we must also check for dirty close calls\n        this._ws.onclose = function (e) {\n            if (e && !e.wasClean) {\n                self._handleConnectionError();\n            }\n            self._open = false;\n        };\n        this._ws.onopen = function () {\n            // Connected! Cancel the connection timeout\n            self._clearConnectionTimeout();\n            // Drain all pending messages\n            var pending = self._pending;\n            self._pending = null;\n            for (var i = 0; i < pending.length; i++) {\n                self.write(pending[i]);\n            }\n        };\n        this._ws.onmessage = function (event) {\n            if (self.onmessage) {\n                var b = new channel_buf_1.default(event.data);\n                self.onmessage(b);\n            }\n        };\n        this._ws.onerror = this._handleConnectionError;\n        this._connectionTimeoutFired = false;\n        this._connectionTimeoutId = this._setupConnectionTimeout();\n    }\n    WebSocketChannel.prototype._handleConnectionError = function () {\n        if (this._connectionTimeoutFired) {\n            // timeout fired - not connected within configured time\n            this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n            return;\n        }\n        // onerror triggers on websocket close as well.. don't get me started.\n        if (this._open) {\n            // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n            this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' +\n                'constraints in your web browser, the reason for the failure is not available ' +\n                'to this Neo4j Driver. Please use your browsers development console to determine ' +\n                'the root cause of the failure. Common reasons include the database being ' +\n                'unavailable, using the wrong connection URL or temporary network problems. ' +\n                'If you have enabled encryption, ensure your browser is configured to trust the ' +\n                'certificate Neo4j is configured to use. WebSocket `readyState` is: ' +\n                this._ws.readyState, this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n        }\n    };\n    /**\n     * Write the passed in buffer to connection\n     * @param {ChannelBuffer} buffer - Buffer to write\n     */\n    WebSocketChannel.prototype.write = function (buffer) {\n        // If there is a pending queue, push this on that queue. This means\n        // we are not yet connected, so we queue things locally.\n        if (this._pending !== null) {\n            this._pending.push(buffer);\n        }\n        else if (buffer instanceof channel_buf_1.default) {\n            try {\n                this._ws.send(buffer._buffer);\n            }\n            catch (error) {\n                if (this._ws.readyState !== WS_OPEN) {\n                    // Websocket has been closed\n                    this._handleConnectionError();\n                }\n                else {\n                    // Some other error occured\n                    throw error;\n                }\n            }\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n        }\n    };\n    /**\n     * Close the connection\n     * @returns {Promise} A promise that will be resolved after channel is closed\n     */\n    WebSocketChannel.prototype.close = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n                _this._open = false;\n                _this._clearConnectionTimeout();\n                _this._ws.onclose = function () { return resolve(); };\n                _this._ws.close();\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * Setup the receive timeout for the channel.\n     *\n     * Not supported for the browser channel.\n     *\n     * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n     * @returns {void}\n     */\n    WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) { };\n    /**\n     * Set connection timeout on the given WebSocket, if configured.\n     * @return {number} the timeout id or null.\n     * @private\n     */\n    WebSocketChannel.prototype._setupConnectionTimeout = function () {\n        var _this = this;\n        var timeout = this._config.connectionTimeout;\n        if (timeout) {\n            var webSocket_1 = this._ws;\n            return setTimeout(function () {\n                if (webSocket_1.readyState !== WS_OPEN) {\n                    _this._connectionTimeoutFired = true;\n                    webSocket_1.close();\n                }\n            }, timeout);\n        }\n        return null;\n    };\n    /**\n     * Remove active connection timeout, if any.\n     * @private\n     */\n    WebSocketChannel.prototype._clearConnectionTimeout = function () {\n        var timeoutId = this._connectionTimeoutId;\n        if (timeoutId || timeoutId === 0) {\n            this._connectionTimeoutFired = false;\n            this._connectionTimeoutId = null;\n            clearTimeout(timeoutId);\n        }\n    };\n    return WebSocketChannel;\n}());\nexports.default = WebSocketChannel;\nfunction createWebSocket(scheme, address, socketFactory) {\n    var url = scheme + '://' + address.asHostPort();\n    try {\n        return socketFactory(url);\n    }\n    catch (error) {\n        if (isIPv6AddressIssueOnWindows(error, address)) {\n            // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n            // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n            // and Windows requires IPv6 to be changes in the following way:\n            //   1) replace all ':' with '-'\n            //   2) replace '%' with 's' for link-local address\n            //   3) append '.ipv6-literal.net' suffix\n            // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n            // For more details see:\n            //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n            //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n            // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n            // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n            var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n            return socketFactory(windowsFriendlyUrl);\n        }\n        else {\n            throw error;\n        }\n    }\n}\nfunction isIPv6AddressIssueOnWindows(error, address) {\n    return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\nfunction isIPv6Address(hostAndPort) {\n    return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n    // replace all ':' with '-'\n    var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-');\n    // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n    var hostWithoutPercent = hostWithoutColons.replace('%', 's');\n    // append magic '.ipv6-literal.net' suffix\n    var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n    return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\nfunction determineWebSocketScheme(config, protocolSupplier) {\n    var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n    var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n    var trust = config.trust;\n    var secureProtocol = isProtocolSecure(protocolSupplier);\n    verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n    if (encryptionOff) {\n        // encryption explicitly turned off in the config\n        return { scheme: 'ws', error: null };\n    }\n    if (secureProtocol) {\n        // driver is used in a secure https web page, use 'wss'\n        return { scheme: 'wss', error: null };\n    }\n    if (encryptionOn) {\n        // encryption explicitly requested in the config\n        if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n            // trust strategy not specified or the only supported strategy is specified\n            return { scheme: 'wss', error: null };\n        }\n        else {\n            var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' +\n                \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" +\n                trust +\n                ' is not supported. Please ' +\n                'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' +\n                '`encrypted:\"' +\n                ENCRYPTION_OFF +\n                '\"` in the driver configuration.');\n            return { scheme: null, error: error };\n        }\n    }\n    // default to unencrypted web socket\n    return { scheme: 'ws', error: null };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOn(config) {\n    return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOff(config) {\n    return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\nfunction isProtocolSecure(protocolSupplier) {\n    var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n    return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n    if (secureProtocol === null) {\n        // do nothing sice the protocol could not be identified\n    }\n    else if (encryptionOn && !secureProtocol) {\n        // encryption explicitly turned on for a driver used on a HTTP web page\n        console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to not use encryption.');\n    }\n    else if (encryptionOff && secureProtocol) {\n        // encryption explicitly turned off for a driver used on a HTTPS web page\n        console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to use encryption.');\n    }\n}\nfunction detectWebPageProtocol() {\n    return typeof window !== 'undefined' && window.location\n        ? window.location.protocol\n        : null;\n}\n"]},"metadata":{},"sourceType":"script"}