{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Common base with default implementation for most buffer methods.\r\n * Buffers are stateful - they track a current \"position\", this helps greatly\r\n * when reading and writing from them incrementally. You can also ignore the\r\n * stateful read/write methods.\r\n * readXXX and writeXXX-methods move the inner position of the buffer.\r\n * putXXX and getXXX-methods do not.\r\n * @access private\r\n */\n\nvar BaseBuffer =\n/** @class */\nfunction () {\n  /**\r\n   * Create a instance with the injected size.\r\n   * @constructor\r\n   * @param {Integer} size\r\n   */\n  function BaseBuffer(size) {\n    this.position = 0;\n    this.length = size;\n  }\n\n  BaseBuffer.prototype.getUInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.getInt8 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.getFloat64 = function (position) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putUInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putInt8 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n\n  BaseBuffer.prototype.putFloat64 = function (position, val) {\n    throw new Error('Not implemented');\n  };\n  /**\r\n   * @param p\r\n   */\n\n\n  BaseBuffer.prototype.getInt16 = function (p) {\n    return this.getInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\r\n   * @param p\r\n   */\n\n\n  BaseBuffer.prototype.getUInt16 = function (p) {\n    return this.getUInt8(p) << 8 | this.getUInt8(p + 1);\n  };\n  /**\r\n   * @param p\r\n   */\n\n\n  BaseBuffer.prototype.getInt32 = function (p) {\n    return this.getInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\r\n   * @param p\r\n   */\n\n\n  BaseBuffer.prototype.getUInt32 = function (p) {\n    return this.getUInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n  };\n  /**\r\n   * @param p\r\n   */\n\n\n  BaseBuffer.prototype.getInt64 = function (p) {\n    return this.getInt8(p) << 56 | this.getUInt8(p + 1) << 48 | this.getUInt8(p + 2) << 40 | this.getUInt8(p + 3) << 32 | this.getUInt8(p + 4) << 24 | this.getUInt8(p + 5) << 16 | this.getUInt8(p + 6) << 8 | this.getUInt8(p + 7);\n  };\n  /**\r\n   * Get a slice of this buffer. This method does not copy any data,\r\n   * but simply provides a slice view of this buffer\r\n   * @param start\r\n   * @param length\r\n   */\n\n\n  BaseBuffer.prototype.getSlice = function (start, length) {\n    return new SliceBuffer(start, length, this);\n  };\n  /**\r\n   * @param p\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.putInt16 = function (p, val) {\n    this.putInt8(p, val >> 8);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\r\n   * @param p\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.putUInt16 = function (p, val) {\n    this.putUInt8(p, val >> 8 & 0xff);\n    this.putUInt8(p + 1, val & 0xff);\n  };\n  /**\r\n   * @param p\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.putInt32 = function (p, val) {\n    this.putInt8(p, val >> 24);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\r\n   * @param p\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.putUInt32 = function (p, val) {\n    this.putUInt8(p, val >> 24 & 0xff);\n    this.putUInt8(p + 1, val >> 16 & 0xff);\n    this.putUInt8(p + 2, val >> 8 & 0xff);\n    this.putUInt8(p + 3, val & 0xff);\n  };\n  /**\r\n   * @param p\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.putInt64 = function (p, val) {\n    this.putInt8(p, val >> 48);\n    this.putUInt8(p + 1, val >> 42 & 0xff);\n    this.putUInt8(p + 2, val >> 36 & 0xff);\n    this.putUInt8(p + 3, val >> 30 & 0xff);\n    this.putUInt8(p + 4, val >> 24 & 0xff);\n    this.putUInt8(p + 5, val >> 16 & 0xff);\n    this.putUInt8(p + 6, val >> 8 & 0xff);\n    this.putUInt8(p + 7, val & 0xff);\n  };\n  /**\r\n   * @param position\r\n   * @param other\r\n   */\n\n\n  BaseBuffer.prototype.putBytes = function (position, other) {\n    for (var i = 0, end = other.remaining(); i < end; i++) {\n      this.putUInt8(position + i, other.readUInt8());\n    }\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readUInt8 = function () {\n    return this.getUInt8(this._updatePos(1));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readInt8 = function () {\n    return this.getInt8(this._updatePos(1));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readUInt16 = function () {\n    return this.getUInt16(this._updatePos(2));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readUInt32 = function () {\n    return this.getUInt32(this._updatePos(4));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readInt16 = function () {\n    return this.getInt16(this._updatePos(2));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readInt32 = function () {\n    return this.getInt32(this._updatePos(4));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readInt64 = function () {\n    return this.getInt32(this._updatePos(8));\n  };\n  /**\r\n   * Read from state position.\r\n   */\n\n\n  BaseBuffer.prototype.readFloat64 = function () {\n    return this.getFloat64(this._updatePos(8));\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeUInt8 = function (val) {\n    this.putUInt8(this._updatePos(1), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeInt8 = function (val) {\n    this.putInt8(this._updatePos(1), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeInt16 = function (val) {\n    this.putInt16(this._updatePos(2), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeInt32 = function (val) {\n    this.putInt32(this._updatePos(4), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeUInt32 = function (val) {\n    this.putUInt32(this._updatePos(4), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeInt64 = function (val) {\n    this.putInt64(this._updatePos(8), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeFloat64 = function (val) {\n    this.putFloat64(this._updatePos(8), val);\n  };\n  /**\r\n   * Write to state position.\r\n   * @param val\r\n   */\n\n\n  BaseBuffer.prototype.writeBytes = function (val) {\n    this.putBytes(this._updatePos(val.remaining()), val);\n  };\n  /**\r\n   * Get a slice of this buffer. This method does not copy any data,\r\n   * but simply provides a slice view of this buffer\r\n   * @param length\r\n   */\n\n\n  BaseBuffer.prototype.readSlice = function (length) {\n    return this.getSlice(this._updatePos(length), length);\n  };\n\n  BaseBuffer.prototype._updatePos = function (length) {\n    var p = this.position;\n    this.position += length;\n    return p;\n  };\n  /**\r\n   * Get remaining\r\n   */\n\n\n  BaseBuffer.prototype.remaining = function () {\n    return this.length - this.position;\n  };\n  /**\r\n   * Has remaining\r\n   */\n\n\n  BaseBuffer.prototype.hasRemaining = function () {\n    return this.remaining() > 0;\n  };\n  /**\r\n   * Reset position state\r\n   */\n\n\n  BaseBuffer.prototype.reset = function () {\n    this.position = 0;\n  };\n  /**\r\n   * Get string representation of buffer and it's state.\r\n   * @return {string} Buffer as a string\r\n   */\n\n\n  BaseBuffer.prototype.toString = function () {\n    return this.constructor.name + '( position=' + this.position + ' )\\n  ' + this.toHex();\n  };\n  /**\r\n   * Get string representation of buffer.\r\n   * @return {string} Buffer as a string\r\n   */\n\n\n  BaseBuffer.prototype.toHex = function () {\n    var out = '';\n\n    for (var i = 0; i < this.length; i++) {\n      var hexByte = this.getUInt8(i).toString(16);\n\n      if (hexByte.length === 1) {\n        hexByte = '0' + hexByte;\n      }\n\n      out += hexByte;\n\n      if (i !== this.length - 1) {\n        out += ' ';\n      }\n    }\n\n    return out;\n  };\n\n  return BaseBuffer;\n}();\n\nexports.default = BaseBuffer;\n/**\r\n * Represents a view as slice of another buffer.\r\n * @access private\r\n */\n\nvar SliceBuffer =\n/** @class */\nfunction (_super) {\n  __extends(SliceBuffer, _super);\n\n  function SliceBuffer(start, length, inner) {\n    var _this = _super.call(this, length) || this;\n\n    _this._start = start;\n    _this._inner = inner;\n    return _this;\n  }\n\n  SliceBuffer.prototype.putUInt8 = function (position, val) {\n    this._inner.putUInt8(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.getUInt8 = function (position) {\n    return this._inner.getUInt8(this._start + position);\n  };\n\n  SliceBuffer.prototype.putInt8 = function (position, val) {\n    this._inner.putInt8(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.putFloat64 = function (position, val) {\n    this._inner.putFloat64(this._start + position, val);\n  };\n\n  SliceBuffer.prototype.getInt8 = function (position) {\n    return this._inner.getInt8(this._start + position);\n  };\n\n  SliceBuffer.prototype.getFloat64 = function (position) {\n    return this._inner.getFloat64(this._start + position);\n  };\n\n  return SliceBuffer;\n}(BaseBuffer);","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","BaseBuffer","size","position","length","getUInt8","Error","getInt8","getFloat64","putUInt8","val","putInt8","putFloat64","getInt16","getUInt16","getInt32","getUInt32","getInt64","getSlice","start","SliceBuffer","putInt16","putUInt16","putInt32","putUInt32","putInt64","putBytes","other","i","end","remaining","readUInt8","_updatePos","readInt8","readUInt16","readUInt32","readInt16","readInt32","readInt64","readFloat64","writeUInt8","writeInt8","writeInt16","writeInt32","writeUInt32","writeInt64","writeFloat64","writeBytes","readSlice","hasRemaining","reset","toString","name","toHex","out","hexByte","default","_super","inner","_this","_start","_inner"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Common base with default implementation for most buffer methods.\r\n * Buffers are stateful - they track a current \"position\", this helps greatly\r\n * when reading and writing from them incrementally. You can also ignore the\r\n * stateful read/write methods.\r\n * readXXX and writeXXX-methods move the inner position of the buffer.\r\n * putXXX and getXXX-methods do not.\r\n * @access private\r\n */\r\nvar BaseBuffer = /** @class */ (function () {\r\n    /**\r\n     * Create a instance with the injected size.\r\n     * @constructor\r\n     * @param {Integer} size\r\n     */\r\n    function BaseBuffer(size) {\r\n        this.position = 0;\r\n        this.length = size;\r\n    }\r\n    BaseBuffer.prototype.getUInt8 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.getInt8 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.getFloat64 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putUInt8 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putInt8 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putFloat64 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt16 = function (p) {\r\n        return (this.getInt8(p) << 8) | this.getUInt8(p + 1);\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getUInt16 = function (p) {\r\n        return (this.getUInt8(p) << 8) | this.getUInt8(p + 1);\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt32 = function (p) {\r\n        return ((this.getInt8(p) << 24) |\r\n            (this.getUInt8(p + 1) << 16) |\r\n            (this.getUInt8(p + 2) << 8) |\r\n            this.getUInt8(p + 3));\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getUInt32 = function (p) {\r\n        return ((this.getUInt8(p) << 24) |\r\n            (this.getUInt8(p + 1) << 16) |\r\n            (this.getUInt8(p + 2) << 8) |\r\n            this.getUInt8(p + 3));\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt64 = function (p) {\r\n        return ((this.getInt8(p) << 56) |\r\n            (this.getUInt8(p + 1) << 48) |\r\n            (this.getUInt8(p + 2) << 40) |\r\n            (this.getUInt8(p + 3) << 32) |\r\n            (this.getUInt8(p + 4) << 24) |\r\n            (this.getUInt8(p + 5) << 16) |\r\n            (this.getUInt8(p + 6) << 8) |\r\n            this.getUInt8(p + 7));\r\n    };\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param start\r\n     * @param length\r\n     */\r\n    BaseBuffer.prototype.getSlice = function (start, length) {\r\n        return new SliceBuffer(start, length, this);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt16 = function (p, val) {\r\n        this.putInt8(p, val >> 8);\r\n        this.putUInt8(p + 1, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putUInt16 = function (p, val) {\r\n        this.putUInt8(p, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 1, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt32 = function (p, val) {\r\n        this.putInt8(p, val >> 24);\r\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 3, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putUInt32 = function (p, val) {\r\n        this.putUInt8(p, (val >> 24) & 0xff);\r\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 3, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt64 = function (p, val) {\r\n        this.putInt8(p, val >> 48);\r\n        this.putUInt8(p + 1, (val >> 42) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 36) & 0xff);\r\n        this.putUInt8(p + 3, (val >> 30) & 0xff);\r\n        this.putUInt8(p + 4, (val >> 24) & 0xff);\r\n        this.putUInt8(p + 5, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 6, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 7, val & 0xff);\r\n    };\r\n    /**\r\n     * @param position\r\n     * @param other\r\n     */\r\n    BaseBuffer.prototype.putBytes = function (position, other) {\r\n        for (var i = 0, end = other.remaining(); i < end; i++) {\r\n            this.putUInt8(position + i, other.readUInt8());\r\n        }\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt8 = function () {\r\n        return this.getUInt8(this._updatePos(1));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt8 = function () {\r\n        return this.getInt8(this._updatePos(1));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt16 = function () {\r\n        return this.getUInt16(this._updatePos(2));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt32 = function () {\r\n        return this.getUInt32(this._updatePos(4));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt16 = function () {\r\n        return this.getInt16(this._updatePos(2));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt32 = function () {\r\n        return this.getInt32(this._updatePos(4));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt64 = function () {\r\n        return this.getInt32(this._updatePos(8));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readFloat64 = function () {\r\n        return this.getFloat64(this._updatePos(8));\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeUInt8 = function (val) {\r\n        this.putUInt8(this._updatePos(1), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt8 = function (val) {\r\n        this.putInt8(this._updatePos(1), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt16 = function (val) {\r\n        this.putInt16(this._updatePos(2), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt32 = function (val) {\r\n        this.putInt32(this._updatePos(4), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeUInt32 = function (val) {\r\n        this.putUInt32(this._updatePos(4), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt64 = function (val) {\r\n        this.putInt64(this._updatePos(8), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeFloat64 = function (val) {\r\n        this.putFloat64(this._updatePos(8), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeBytes = function (val) {\r\n        this.putBytes(this._updatePos(val.remaining()), val);\r\n    };\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param length\r\n     */\r\n    BaseBuffer.prototype.readSlice = function (length) {\r\n        return this.getSlice(this._updatePos(length), length);\r\n    };\r\n    BaseBuffer.prototype._updatePos = function (length) {\r\n        var p = this.position;\r\n        this.position += length;\r\n        return p;\r\n    };\r\n    /**\r\n     * Get remaining\r\n     */\r\n    BaseBuffer.prototype.remaining = function () {\r\n        return this.length - this.position;\r\n    };\r\n    /**\r\n     * Has remaining\r\n     */\r\n    BaseBuffer.prototype.hasRemaining = function () {\r\n        return this.remaining() > 0;\r\n    };\r\n    /**\r\n     * Reset position state\r\n     */\r\n    BaseBuffer.prototype.reset = function () {\r\n        this.position = 0;\r\n    };\r\n    /**\r\n     * Get string representation of buffer and it's state.\r\n     * @return {string} Buffer as a string\r\n     */\r\n    BaseBuffer.prototype.toString = function () {\r\n        return (this.constructor.name +\r\n            '( position=' +\r\n            this.position +\r\n            ' )\\n  ' +\r\n            this.toHex());\r\n    };\r\n    /**\r\n     * Get string representation of buffer.\r\n     * @return {string} Buffer as a string\r\n     */\r\n    BaseBuffer.prototype.toHex = function () {\r\n        var out = '';\r\n        for (var i = 0; i < this.length; i++) {\r\n            var hexByte = this.getUInt8(i).toString(16);\r\n            if (hexByte.length === 1) {\r\n                hexByte = '0' + hexByte;\r\n            }\r\n            out += hexByte;\r\n            if (i !== this.length - 1) {\r\n                out += ' ';\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    return BaseBuffer;\r\n}());\r\nexports.default = BaseBuffer;\r\n/**\r\n * Represents a view as slice of another buffer.\r\n * @access private\r\n */\r\nvar SliceBuffer = /** @class */ (function (_super) {\r\n    __extends(SliceBuffer, _super);\r\n    function SliceBuffer(start, length, inner) {\r\n        var _this = _super.call(this, length) || this;\r\n        _this._start = start;\r\n        _this._inner = inner;\r\n        return _this;\r\n    }\r\n    SliceBuffer.prototype.putUInt8 = function (position, val) {\r\n        this._inner.putUInt8(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.getUInt8 = function (position) {\r\n        return this._inner.getUInt8(this._start + position);\r\n    };\r\n    SliceBuffer.prototype.putInt8 = function (position, val) {\r\n        this._inner.putInt8(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.putFloat64 = function (position, val) {\r\n        this._inner.putFloat64(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.getInt8 = function (position) {\r\n        return this._inner.getInt8(this._start + position);\r\n    };\r\n    SliceBuffer.prototype.getFloat64 = function (position) {\r\n        return this._inner.getFloat64(this._start + position);\r\n    };\r\n    return SliceBuffer;\r\n}(BaseBuffer));\r\n"]},"metadata":{},"sourceType":"script"}