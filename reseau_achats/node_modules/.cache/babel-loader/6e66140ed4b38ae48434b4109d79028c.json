{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar server_address_1 = require(\"../server-address\");\n\nfunction resolveToSelf(address) {\n  return Promise.resolve([address]);\n}\n\nvar ConfiguredCustomResolver =\n/** @class */\nfunction () {\n  function ConfiguredCustomResolver(resolverFunction) {\n    this._resolverFunction = resolverFunction || resolveToSelf;\n  }\n\n  ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n    }).then(function (resolved) {\n      if (!Array.isArray(resolved)) {\n        throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' + (\"Each address is '<host>:<port>'. Got: \" + resolved));\n      }\n\n      return resolved.map(function (r) {\n        return server_address_1.ServerAddress.fromUrl(r);\n      });\n    });\n  };\n\n  return ConfiguredCustomResolver;\n}();\n\nexports.default = ConfiguredCustomResolver;","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-core/lib/internal/resolver/configured-custom-resolver.js"],"names":["Object","defineProperty","exports","value","server_address_1","require","resolveToSelf","address","Promise","resolve","ConfiguredCustomResolver","resolverFunction","_resolverFunction","prototype","seedRouter","_this","asHostPort","then","resolved","Array","isArray","TypeError","map","r","ServerAddress","fromUrl","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,SAAOC,OAAO,CAACC,OAAR,CAAgB,CAACF,OAAD,CAAhB,CAAP;AACH;;AACD,IAAIG,wBAAwB;AAAG;AAAe,YAAY;AACtD,WAASA,wBAAT,CAAkCC,gBAAlC,EAAoD;AAChD,SAAKC,iBAAL,GAAyBD,gBAAgB,IAAIL,aAA7C;AACH;;AACDI,EAAAA,wBAAwB,CAACG,SAAzB,CAAmCJ,OAAnC,GAA6C,UAAUK,UAAV,EAAsB;AAC/D,QAAIC,KAAK,GAAG,IAAZ;;AACA,WAAO,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClC,aAAOA,OAAO,CAACM,KAAK,CAACH,iBAAN,CAAwBE,UAAU,CAACE,UAAX,EAAxB,CAAD,CAAd;AACH,KAFM,EAEJC,IAFI,CAEC,UAAUC,QAAV,EAAoB;AACxB,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8B;AAC1B,cAAM,IAAIG,SAAJ,CAAc,+HACf,2CAA2CH,QAD5B,CAAd,CAAN;AAEH;;AACD,aAAOA,QAAQ,CAACI,GAAT,CAAa,UAAUC,CAAV,EAAa;AAAE,eAAOnB,gBAAgB,CAACoB,aAAjB,CAA+BC,OAA/B,CAAuCF,CAAvC,CAAP;AAAmD,OAA/E,CAAP;AACH,KARM,CAAP;AASH,GAXD;;AAYA,SAAOb,wBAAP;AACH,CAjB6C,EAA9C;;AAkBAR,OAAO,CAACwB,OAAR,GAAkBhB,wBAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar server_address_1 = require(\"../server-address\");\r\nfunction resolveToSelf(address) {\r\n    return Promise.resolve([address]);\r\n}\r\nvar ConfiguredCustomResolver = /** @class */ (function () {\r\n    function ConfiguredCustomResolver(resolverFunction) {\r\n        this._resolverFunction = resolverFunction || resolveToSelf;\r\n    }\r\n    ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            return resolve(_this._resolverFunction(seedRouter.asHostPort()));\r\n        }).then(function (resolved) {\r\n            if (!Array.isArray(resolved)) {\r\n                throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' +\r\n                    (\"Each address is '<host>:<port>'. Got: \" + resolved));\r\n            }\r\n            return resolved.map(function (r) { return server_address_1.ServerAddress.fromUrl(r); });\r\n        });\r\n    };\r\n    return ConfiguredCustomResolver;\r\n}());\r\nexports.default = ConfiguredCustomResolver;\r\n"]},"metadata":{},"sourceType":"script"}