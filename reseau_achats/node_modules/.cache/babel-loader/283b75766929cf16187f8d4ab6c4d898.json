{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n  return function (subscriber) {\n    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n\n    subscriber.complete();\n  };\n};","map":{"version":3,"mappings":"AAMA;OACE,IAAKA,gBAAiB,aAAcC,KAAd,EAAqB;SACzC,UAAWC,UAAX,EAAyB;AAC1B;AACDA,gBAAW,CAAQC,IAAnB,CAAsBF,QAAtB;AACA;;;;CAJA","names":["subscribeToArray","array","subscriber","next"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\util\\subscribeToArray.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\r\n\r\n/**\r\n * Subscribes to an ArrayLike with a subscriber\r\n * @param array The array or array-like to subscribe to\r\n */\r\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\r\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\r\n    subscriber.next(array[i]);\r\n  }\r\n  subscriber.complete();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}