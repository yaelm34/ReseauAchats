{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      return input.then(function (value) {\n        sub.add(scheduler.schedule(function () {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }));\n      }, function (err) {\n        sub.add(scheduler.schedule(function () {\n          return subscriber.error(err);\n        }));\n      });\n    }));\n    return sub;\n  });\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAASA,UAAT,QAAuB,eAAvB;AAEA,SAAMC,YAAN,QAAgB,iBAAhB;OACE,SAAWC,eAAX,CAAyBC,KAAzB,EAAyBC,SAAzB,EAAmC;SACjC,IAASJ,UAAT,CAAgB,UAAcK,UAAd,EAAe;AAC/B,QAAIC,GAAG,GAAC,kBAAR;QAEIC,IAAIH,SAAI,SAAJ,CAAc,YAAS;aACzBD,WAAW,UAAYK,KAAZ,EAAY;AACvBF,WAAG,CAACC,GAAJ,CAAQH,SAAS,CAACK,QAAV,CAAmB;AACzBJ;AAENC,cAAGC,GAAH,CAAGH;AAAA;AAAA,YAAH;AACM,SAJM,CAAR;AAML,OAPK,EAOH,UAACM,GAAD,EAAC;AACGJ,WAAI,IAAJ,CAAIF;AAAA;AAAA,UAAJ;AACN,OATK;AAUT,KAXW;;GAHR","names":["Observable","Subscription","schedulePromise","input","scheduler","subscriber","sub","add","value","schedule","err"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\scheduled\\schedulePromise.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { Subscription } from '../Subscription';\r\n\r\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\r\n  return new Observable<T>(subscriber => {\r\n    const sub = new Subscription();\r\n    sub.add(scheduler.schedule(() => input.then(\r\n      value => {\r\n        sub.add(scheduler.schedule(() => {\r\n          subscriber.next(value);\r\n          sub.add(scheduler.schedule(() => subscriber.complete()));\r\n        }));\r\n      },\r\n      err => {\r\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\r\n      }\r\n    )));\r\n    return sub;\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}