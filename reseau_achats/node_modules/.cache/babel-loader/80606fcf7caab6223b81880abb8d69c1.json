{"ast":null,"code":"/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n  return !isArray(val) && val - parseFloat(val) + 1 >= 0;\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAAMA,OAAN,QAAgB,WAAhB;OAKE,SAAQC,SAAR,CAAoBC,GAApB,EAAyB;AAC1B","names":["isArray","isNumeric","val"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\util\\isNumeric.ts"],"sourcesContent":["import { isArray } from './isArray';\r\n\r\nexport function isNumeric(val: any): val is number | string {\r\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n  // subtraction forces infinities to NaN\r\n  // adding 1 corrects loss of precision from parseFloat (#15100)\r\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}