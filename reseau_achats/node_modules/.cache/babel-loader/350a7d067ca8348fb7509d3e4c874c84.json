{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE,\n    SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\n\nvar ConnectionErrorHandler =\n/** @class */\nfunction () {\n  function ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleAuthorizationExpired) {\n    this._errorCode = errorCode;\n    this._handleUnavailability = handleUnavailability || noOpHandler;\n    this._handleWriteFailure = handleWriteFailure || noOpHandler;\n    this._handleAuthorizationExpired = handleAuthorizationExpired || noOpHandler;\n  }\n\n  ConnectionErrorHandler.create = function (_a) {\n    var errorCode = _a.errorCode,\n        handleUnavailability = _a.handleUnavailability,\n        handleWriteFailure = _a.handleWriteFailure,\n        handleAuthorizationExpired = _a.handleAuthorizationExpired;\n    return new ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleAuthorizationExpired);\n  };\n  /**\r\n   * Error code to use for network errors.\r\n   * @return {string} the error code.\r\n   */\n\n\n  ConnectionErrorHandler.prototype.errorCode = function () {\n    return this._errorCode;\n  };\n  /**\r\n   * Handle and transform the error.\r\n   * @param {Neo4jError} error the original error.\r\n   * @param {ServerAddress} address the address of the connection where the error happened.\r\n   * @return {Neo4jError} new error that should be propagated to the user.\r\n   */\n\n\n  ConnectionErrorHandler.prototype.handleAndTransformError = function (error, address) {\n    if (isAutorizationExpiredError(error)) {\n      return this._handleAuthorizationExpired(error, address);\n    }\n\n    if (isAvailabilityError(error)) {\n      return this._handleUnavailability(error, address);\n    }\n\n    if (isFailureToWrite(error)) {\n      return this._handleWriteFailure(error, address);\n    }\n\n    return error;\n  };\n\n  return ConnectionErrorHandler;\n}();\n\nexports.default = ConnectionErrorHandler;\n\nfunction isAutorizationExpiredError(error) {\n  return error && (error.code === 'Neo.ClientError.Security.AuthorizationExpired' || error.code === 'Neo.ClientError.Security.TokenExpired');\n}\n\nfunction isAvailabilityError(error) {\n  if (error) {\n    return error.code === SESSION_EXPIRED || error.code === SERVICE_UNAVAILABLE || error.code === 'Neo.TransientError.General.DatabaseUnavailable';\n  }\n\n  return false;\n}\n\nfunction isFailureToWrite(error) {\n  if (error) {\n    return error.code === 'Neo.ClientError.Cluster.NotALeader' || error.code === 'Neo.ClientError.General.ForbiddenOnReadOnlyDatabase';\n  }\n\n  return false;\n}\n\nfunction noOpHandler(error) {\n  return error;\n}","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js"],"names":["Object","defineProperty","exports","value","neo4j_driver_core_1","require","SERVICE_UNAVAILABLE","error","SESSION_EXPIRED","ConnectionErrorHandler","errorCode","handleUnavailability","handleWriteFailure","handleAuthorizationExpired","_errorCode","_handleUnavailability","noOpHandler","_handleWriteFailure","_handleAuthorizationExpired","create","_a","prototype","handleAndTransformError","address","isAutorizationExpiredError","isAvailabilityError","isFailureToWrite","default","code"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\r\nvar ConnectionErrorHandler = /** @class */ (function () {\r\n    function ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleAuthorizationExpired) {\r\n        this._errorCode = errorCode;\r\n        this._handleUnavailability = handleUnavailability || noOpHandler;\r\n        this._handleWriteFailure = handleWriteFailure || noOpHandler;\r\n        this._handleAuthorizationExpired = handleAuthorizationExpired || noOpHandler;\r\n    }\r\n    ConnectionErrorHandler.create = function (_a) {\r\n        var errorCode = _a.errorCode, handleUnavailability = _a.handleUnavailability, handleWriteFailure = _a.handleWriteFailure, handleAuthorizationExpired = _a.handleAuthorizationExpired;\r\n        return new ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleAuthorizationExpired);\r\n    };\r\n    /**\r\n     * Error code to use for network errors.\r\n     * @return {string} the error code.\r\n     */\r\n    ConnectionErrorHandler.prototype.errorCode = function () {\r\n        return this._errorCode;\r\n    };\r\n    /**\r\n     * Handle and transform the error.\r\n     * @param {Neo4jError} error the original error.\r\n     * @param {ServerAddress} address the address of the connection where the error happened.\r\n     * @return {Neo4jError} new error that should be propagated to the user.\r\n     */\r\n    ConnectionErrorHandler.prototype.handleAndTransformError = function (error, address) {\r\n        if (isAutorizationExpiredError(error)) {\r\n            return this._handleAuthorizationExpired(error, address);\r\n        }\r\n        if (isAvailabilityError(error)) {\r\n            return this._handleUnavailability(error, address);\r\n        }\r\n        if (isFailureToWrite(error)) {\r\n            return this._handleWriteFailure(error, address);\r\n        }\r\n        return error;\r\n    };\r\n    return ConnectionErrorHandler;\r\n}());\r\nexports.default = ConnectionErrorHandler;\r\nfunction isAutorizationExpiredError(error) {\r\n    return error && (error.code === 'Neo.ClientError.Security.AuthorizationExpired' ||\r\n        error.code === 'Neo.ClientError.Security.TokenExpired');\r\n}\r\nfunction isAvailabilityError(error) {\r\n    if (error) {\r\n        return (error.code === SESSION_EXPIRED ||\r\n            error.code === SERVICE_UNAVAILABLE ||\r\n            error.code === 'Neo.TransientError.General.DatabaseUnavailable');\r\n    }\r\n    return false;\r\n}\r\nfunction isFailureToWrite(error) {\r\n    if (error) {\r\n        return (error.code === 'Neo.ClientError.Cluster.NotALeader' ||\r\n            error.code === 'Neo.ClientError.General.ForbiddenOnReadOnlyDatabase');\r\n    }\r\n    return false;\r\n}\r\nfunction noOpHandler(error) {\r\n    return error;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}