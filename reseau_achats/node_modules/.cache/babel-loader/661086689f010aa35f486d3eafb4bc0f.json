{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bookmark = void 0;\n\nvar util = __importStar(require(\"./util\"));\n\nvar BOOKMARKS_KEY = 'bookmarks';\n\nvar Bookmark =\n/** @class */\nfunction () {\n  /**\r\n   * @constructor\r\n   * @param {string|string[]} values single bookmark as string or multiple bookmarks as a string array.\r\n   */\n  function Bookmark(values) {\n    this._values = asStringArray(values);\n  }\n\n  Bookmark.empty = function () {\n    return EMPTY_BOOKMARK;\n  };\n  /**\r\n   * Check if the given bookmark is meaningful and can be send to the database.\r\n   * @return {boolean} returns `true` bookmark has a value, `false` otherwise.\r\n   */\n\n\n  Bookmark.prototype.isEmpty = function () {\n    return this._values.length === 0;\n  };\n  /**\r\n   * Get all bookmark values as an array.\r\n   * @return {string[]} all values.\r\n   */\n\n\n  Bookmark.prototype.values = function () {\n    return this._values;\n  };\n  /**\r\n   * Get this bookmark as an object for begin transaction call.\r\n   * @return {Object} the value of this bookmark as object.\r\n   */\n\n\n  Bookmark.prototype.asBeginTransactionParameters = function () {\n    var _a;\n\n    if (this.isEmpty()) {\n      return {};\n    } // Driver sends {bookmark: \"max\", bookmarks: [\"one\", \"two\", \"max\"]} instead of simple\n    // {bookmarks: [\"one\", \"two\", \"max\"]} for backwards compatibility reasons. Old servers can only accept single\n    // bookmark that is why driver has to parse and compare given list of bookmarks. This functionality will\n    // eventually be removed.\n\n\n    return _a = {}, _a[BOOKMARKS_KEY] = this._values, _a;\n  };\n\n  return Bookmark;\n}();\n\nexports.Bookmark = Bookmark;\nvar EMPTY_BOOKMARK = new Bookmark(null);\n/**\r\n * Converts given value to an array.\r\n * @param {string|string[]|Array} [value=undefined] argument to convert.\r\n * @return {string[]} value converted to an array.\r\n */\n\nfunction asStringArray(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (util.isString(value)) {\n    return [value];\n  }\n\n  if (Array.isArray(value)) {\n    var result = [];\n    var flattenedValue = flattenArray(value);\n\n    for (var i = 0; i < flattenedValue.length; i++) {\n      var element = flattenedValue[i]; // if it is undefined or null, ignore it\n\n      if (element !== undefined && element !== null) {\n        if (!util.isString(element)) {\n          throw new TypeError(\"Bookmark value should be a string, given: '\" + element + \"'\");\n        }\n\n        result.push(element);\n      }\n    }\n\n    return result;\n  }\n\n  throw new TypeError(\"Bookmark should either be a string or a string array, given: '\" + value + \"'\");\n}\n/**\r\n * Recursively flattens an array so that the result becomes a single array\r\n * of values, which does not include any sub-arrays\r\n *\r\n * @param {Array} value\r\n */\n\n\nfunction flattenArray(values) {\n  return values.reduce(function (dest, value) {\n    return Array.isArray(value) ? dest.concat(flattenArray(value)) : dest.concat(value);\n  }, []);\n}","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-core/lib/internal/bookmark.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","Bookmark","util","require","BOOKMARKS_KEY","values","_values","asStringArray","empty","EMPTY_BOOKMARK","isEmpty","length","asBeginTransactionParameters","_a","isString","Array","isArray","flattenedValue","flattenArray","i","element","TypeError","push","reduce","dest","concat"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Bookmark = void 0;\r\nvar util = __importStar(require(\"./util\"));\r\nvar BOOKMARKS_KEY = 'bookmarks';\r\nvar Bookmark = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {string|string[]} values single bookmark as string or multiple bookmarks as a string array.\r\n     */\r\n    function Bookmark(values) {\r\n        this._values = asStringArray(values);\r\n    }\r\n    Bookmark.empty = function () {\r\n        return EMPTY_BOOKMARK;\r\n    };\r\n    /**\r\n     * Check if the given bookmark is meaningful and can be send to the database.\r\n     * @return {boolean} returns `true` bookmark has a value, `false` otherwise.\r\n     */\r\n    Bookmark.prototype.isEmpty = function () {\r\n        return this._values.length === 0;\r\n    };\r\n    /**\r\n     * Get all bookmark values as an array.\r\n     * @return {string[]} all values.\r\n     */\r\n    Bookmark.prototype.values = function () {\r\n        return this._values;\r\n    };\r\n    /**\r\n     * Get this bookmark as an object for begin transaction call.\r\n     * @return {Object} the value of this bookmark as object.\r\n     */\r\n    Bookmark.prototype.asBeginTransactionParameters = function () {\r\n        var _a;\r\n        if (this.isEmpty()) {\r\n            return {};\r\n        }\r\n        // Driver sends {bookmark: \"max\", bookmarks: [\"one\", \"two\", \"max\"]} instead of simple\r\n        // {bookmarks: [\"one\", \"two\", \"max\"]} for backwards compatibility reasons. Old servers can only accept single\r\n        // bookmark that is why driver has to parse and compare given list of bookmarks. This functionality will\r\n        // eventually be removed.\r\n        return _a = {},\r\n            _a[BOOKMARKS_KEY] = this._values,\r\n            _a;\r\n    };\r\n    return Bookmark;\r\n}());\r\nexports.Bookmark = Bookmark;\r\nvar EMPTY_BOOKMARK = new Bookmark(null);\r\n/**\r\n * Converts given value to an array.\r\n * @param {string|string[]|Array} [value=undefined] argument to convert.\r\n * @return {string[]} value converted to an array.\r\n */\r\nfunction asStringArray(value) {\r\n    if (!value) {\r\n        return [];\r\n    }\r\n    if (util.isString(value)) {\r\n        return [value];\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = [];\r\n        var flattenedValue = flattenArray(value);\r\n        for (var i = 0; i < flattenedValue.length; i++) {\r\n            var element = flattenedValue[i];\r\n            // if it is undefined or null, ignore it\r\n            if (element !== undefined && element !== null) {\r\n                if (!util.isString(element)) {\r\n                    throw new TypeError(\"Bookmark value should be a string, given: '\" + element + \"'\");\r\n                }\r\n                result.push(element);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    throw new TypeError(\"Bookmark should either be a string or a string array, given: '\" + value + \"'\");\r\n}\r\n/**\r\n * Recursively flattens an array so that the result becomes a single array\r\n * of values, which does not include any sub-arrays\r\n *\r\n * @param {Array} value\r\n */\r\nfunction flattenArray(values) {\r\n    return values.reduce(function (dest, value) {\r\n        return Array.isArray(value)\r\n            ? dest.concat(flattenArray(value))\r\n            : dest.concat(value);\r\n    }, []);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}