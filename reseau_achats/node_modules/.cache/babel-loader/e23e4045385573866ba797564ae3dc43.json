{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = /*@__PURE__*/new Observable(noop);\nexport function never() {\n  return NEVER;\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAAqB,eAArB;AAgCA,SAAOC,IAAP,QAAqB,cAArB;AAKA,OAAM,SAAU,gBAAK,oBAAf;OACJ,SAAYC,KAAZ,GAAa;AACd","names":["Observable","noop","never"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\observable\\never.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * An Observable that emits no items to the Observer and never completes.\r\n *\r\n * ![](never.png)\r\n *\r\n * A simple Observable that emits neither values nor errors nor the completion\r\n * notification. It can be used for testing purposes or for composing with other\r\n * Observables. Please note that by never emitting a complete notification, this\r\n * Observable keeps the subscription from being disposed automatically.\r\n * Subscriptions need to be manually disposed.\r\n *\r\n * ##  Example\r\n * ### Emit the number 7, then never emit anything else (not even complete)\r\n * ```ts\r\n * import { NEVER } from 'rxjs';\r\n * import { startWith } from 'rxjs/operators';\r\n *\r\n * function info() {\r\n *   console.log('Will not be called');\r\n * }\r\n * const result = NEVER.pipe(startWith(7));\r\n * result.subscribe(x => console.log(x), info, info);\r\n *\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n * @see {@link index/EMPTY}\r\n * @see {@link of}\r\n * @see {@link throwError}\r\n */\r\nexport const NEVER = new Observable<never>(noop);\r\n\r\n/**\r\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\r\n */\r\nexport function never () {\r\n  return NEVER;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}