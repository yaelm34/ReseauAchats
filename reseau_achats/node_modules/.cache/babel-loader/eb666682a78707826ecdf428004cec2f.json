{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringify = void 0;\n/**\r\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\r\n * @private\r\n * @param val A JavaScript value, usually an object or array, to be converted.\r\n * @returns A JSON string representing the given value.\r\n */\n\nfunction stringify(val) {\n  return JSON.stringify(val, function (_, value) {\n    return typeof value === 'bigint' ? value + \"n\" : value;\n  });\n}\n\nexports.stringify = stringify;","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-core/lib/json.js"],"names":["Object","defineProperty","exports","value","stringify","val","JSON","_"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,SAAOC,IAAI,CAACF,SAAL,CAAeC,GAAf,EAAoB,UAAUE,CAAV,EAAaJ,KAAb,EAAoB;AAC3C,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,GAAG,GAApC,GAA0CA,KAAjD;AACH,GAFM,CAAP;AAGH;;AACDD,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.stringify = void 0;\r\n/**\r\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\r\n * @private\r\n * @param val A JavaScript value, usually an object or array, to be converted.\r\n * @returns A JSON string representing the given value.\r\n */\r\nfunction stringify(val) {\r\n    return JSON.stringify(val, function (_, value) {\r\n        return typeof value === 'bigint' ? value + \"n\" : value;\r\n    });\r\n}\r\nexports.stringify = stringify;\r\n"]},"metadata":{},"sourceType":"script"}