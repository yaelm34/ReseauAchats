{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function ignoreElements() {\n  return function ignoreElementsOperatorFunction(source) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nvar IgnoreElementsOperator = /*@__PURE__*/function () {\n  function IgnoreElementsOperator() {}\n\n  IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  };\n\n  return IgnoreElementsOperator;\n}();\n\nvar IgnoreElementsSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(IgnoreElementsSubscriber, _super);\n\n  function IgnoreElementsSubscriber() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  IgnoreElementsSubscriber.prototype._next = function (unused) {};\n\n  return IgnoreElementsSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAT,MAAqB,OAArB;AA8BA,SAAMC,UAAN,QAAgB,eAAhB;OACE,SAAOC,cAAP,GAAgB;SACd,SAAOC,8BAAP,CAAuBC,MAAvB,EAAiD;AACjD;AACH;AAED;;IAAAC;AAIA,WAACA,sBAAD,GAAC,CAHC;;wBACgB,WAAcC,6BAAyBF,MAAzB,EAAsC;AACnE;AACH;;AAJA,SAICC,sBAJD;AAWA,CAXA;;IAW0CE,kDAAaC,MAAb,EAAa;AAAvDR;;;AAIC;AAHW;;AAEVO,0BAAC,UAAD,CAACE,KAAD,GAAC,mBACH,CADE;;AAHwC;CAAA","names":["tslib_1","Subscriber","ignoreElements","ignoreElementsOperatorFunction","source","IgnoreElementsOperator","call","IgnoreElementsSubscriber","_super","_next"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\operators\\ignoreElements.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { Operator } from '../Operator';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { OperatorFunction } from '../types';\r\n\r\n/**\r\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\r\n *\r\n * ![](ignoreElements.png)\r\n *\r\n * ## Examples\r\n * ### Ignores emitted values, reacts to observable's completion.\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n * import { ignoreElements } from 'rxjs/operators';\r\n *\r\n * of('you', 'talking', 'to', 'me').pipe(\r\n *   ignoreElements(),\r\n * )\r\n * .subscribe(\r\n *   word => console.log(word),\r\n *   err => console.log('error:', err),\r\n *   () => console.log('the end'),\r\n * );\r\n * // result:\r\n * // 'the end'\r\n * ```\r\n * @return {Observable} An empty Observable that only calls `complete`\r\n * or `error`, based on which one is called by the source Observable.\r\n * @method ignoreElements\r\n * @owner Observable\r\n */\r\nexport function ignoreElements(): OperatorFunction<any, never> {\r\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\r\n    return source.lift(new IgnoreElementsOperator());\r\n  };\r\n}\r\n\r\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\r\n  call(subscriber: Subscriber<R>, source: any): any {\r\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\r\n  }\r\n}\r\n\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\r\n  protected _next(unused: T): void {\r\n    // Do nothing\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}