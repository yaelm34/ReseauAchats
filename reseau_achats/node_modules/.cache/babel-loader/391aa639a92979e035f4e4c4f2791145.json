{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\nvar BehaviorSubject = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BehaviorSubject, _super);\n\n  function BehaviorSubject(_value) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    return _this;\n  }\n\n  Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n    get: function () {\n      return this.getValue();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  BehaviorSubject.prototype._subscribe = function (subscriber) {\n    var subscription = _super.prototype._subscribe.call(this, subscriber);\n\n    if (subscription && !subscription.closed) {\n      subscriber.next(this._value);\n    }\n\n    return subscription;\n  };\n\n  BehaviorSubject.prototype.getValue = function () {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  };\n\n  BehaviorSubject.prototype.next = function (value) {\n    _super.prototype.next.call(this, this._value = value);\n  };\n\n  return BehaviorSubject;\n}(Subject);\n\nexport { BehaviorSubject };","map":{"version":3,"mappings":";AAAA,OAAO,KAAEA,OAAT,MAAwB,OAAxB;AAIA,SAASC,OAAT,QAAS,WAAT;AAQA;;IAAwCC,yCAAUC,MAAV,EAAU;AAEhDH,qCAA6BG,MAA7B;;WAAAD,gBACEE,QAAO;AADW,gBAAMD,MAAN,KAAM,CAAG,IAAH,KAAG,IAAT;;;AAEnB;AAED;;wBAAAD;SACE,YAAY;AACb;KAFD;oBAAA;AAECG;AAFD;;iBAMQ,WAAeC,uBAAMC,UAAN,EAAgB;AACrC,QAAIC,YAAY,SAAwB,UAAxB,CAAsCF,UAAtC,CAA8CG,IAA9C,CAA8C,IAA9C,EAA8CF,UAA9C,CAAhB;;QACEC,YAAW,IAAK,aAAa;AAC9BD;AACD;;AACD;AAED;;iBACW,WAAUG;QACjB,eAAW;AACZ;WACC,SAAUC,MAAV,EAAU;AACX;KADC,MAEA;AACD;AACF;AAED;;iBACE,WAAUC,iBAAMC,KAAN,EAAY;AACvBV;AACH;;AAhCwC,SAAOD,eAAP;CAAA","names":["tslib_1","Subject","BehaviorSubject","_super","_value","configurable","_subscribe","subscriber","subscription","call","getValue","closed","next","value"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\BehaviorSubject.ts"],"sourcesContent":["import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\nimport { SubscriptionLike } from './types';\r\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\r\n\r\n/**\r\n * A variant of Subject that requires an initial value and emits its current\r\n * value whenever it is subscribed to.\r\n *\r\n * @class BehaviorSubject<T>\r\n */\r\nexport class BehaviorSubject<T> extends Subject<T> {\r\n\r\n  constructor(private _value: T) {\r\n    super();\r\n  }\r\n\r\n  get value(): T {\r\n    return this.getValue();\r\n  }\r\n\r\n  /** @deprecated This is an internal implementation detail, do not use. */\r\n  _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    const subscription = super._subscribe(subscriber);\r\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\r\n      subscriber.next(this._value);\r\n    }\r\n    return subscription;\r\n  }\r\n\r\n  getValue(): T {\r\n    if (this.hasError) {\r\n      throw this.thrownError;\r\n    } else if (this.closed) {\r\n      throw new ObjectUnsubscribedError();\r\n    } else {\r\n      return this._value;\r\n    }\r\n  }\r\n\r\n  next(value: T): void {\r\n    super.next(this._value = value);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}