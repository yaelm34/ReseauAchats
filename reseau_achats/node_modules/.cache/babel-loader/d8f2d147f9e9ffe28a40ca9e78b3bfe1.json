{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxConfig = void 0;\n\nvar util = __importStar(require(\"./util\"));\n\nvar error_1 = require(\"../error\");\n\nvar integer_1 = require(\"../integer\");\n/**\r\n * Internal holder of the transaction configuration.\r\n * It performs input validation and value conversion for further serialization by the Bolt protocol layer.\r\n * Users of the driver provide transaction configuration as regular objects `{timeout: 10, metadata: {key: 'value'}}`.\r\n * Driver converts such objects to {@link TxConfig} immediately and uses converted values everywhere.\r\n */\n\n\nvar TxConfig =\n/** @class */\nfunction () {\n  /**\r\n   * @constructor\r\n   * @param {Object} config the raw configuration object.\r\n   */\n  function TxConfig(config) {\n    assertValidConfig(config);\n    this.timeout = extractTimeout(config);\n    this.metadata = extractMetadata(config);\n  }\n  /**\r\n   * Get an empty config object.\r\n   * @return {TxConfig} an empty config.\r\n   */\n\n\n  TxConfig.empty = function () {\n    return EMPTY_CONFIG;\n  };\n  /**\r\n   * Check if this config object is empty. I.e. has no configuration values specified.\r\n   * @return {boolean} `true` if this object is empty, `false` otherwise.\r\n   */\n\n\n  TxConfig.prototype.isEmpty = function () {\n    return Object.values(this).every(function (value) {\n      return value == null;\n    });\n  };\n\n  return TxConfig;\n}();\n\nexports.TxConfig = TxConfig;\nvar EMPTY_CONFIG = new TxConfig({});\n/**\r\n * @return {Integer|null}\r\n */\n\nfunction extractTimeout(config) {\n  if (util.isObject(config) && (config.timeout || config.timeout === 0)) {\n    util.assertNumberOrInteger(config.timeout, 'Transaction timeout');\n    var timeout = (0, integer_1.int)(config.timeout);\n\n    if (timeout.isZero()) {\n      throw (0, error_1.newError)('Transaction timeout should not be zero');\n    }\n\n    if (timeout.isNegative()) {\n      throw (0, error_1.newError)('Transaction timeout should not be negative');\n    }\n\n    return timeout;\n  }\n\n  return null;\n}\n/**\r\n * @return {object|null}\r\n */\n\n\nfunction extractMetadata(config) {\n  if (util.isObject(config) && config.metadata) {\n    var metadata = config.metadata;\n    util.assertObject(metadata, 'config.metadata');\n\n    if (Object.keys(metadata).length !== 0) {\n      // not an empty object\n      return metadata;\n    }\n  }\n\n  return null;\n}\n\nfunction assertValidConfig(config) {\n  if (config) {\n    util.assertObject(config, 'Transaction config');\n  }\n}","map":{"version":3,"sources":["D:/Documents/EMA/Mines A3/NoSQL/ReseauAchats/reseau_achats/node_modules/neo4j-driver-core/lib/internal/tx-config.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","TxConfig","util","require","error_1","integer_1","config","assertValidConfig","timeout","extractTimeout","metadata","extractMetadata","empty","EMPTY_CONFIG","isEmpty","values","every","isObject","assertNumberOrInteger","int","isZero","newError","isNegative","assertObject","keys","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBJ,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;AAAEG,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,GAAG,EAAE,YAAW;AAAE,aAAON,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,GAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;AAC3FX,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBI,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;AAChBT,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd,EAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CV,CAA1C,CAAvB,EAAqEL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;;AACzGM,EAAAA,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;AACA,SAAOE,MAAP;AACH,CAND;;AAOAhB,MAAM,CAACO,cAAP,CAAsBa,OAAtB,EAA+B,YAA/B,EAA6C;AAAER,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAQ,OAAO,CAACC,QAAR,GAAmB,KAAK,CAAxB;;AACA,IAAIC,IAAI,GAAGT,YAAY,CAACU,OAAO,CAAC,QAAD,CAAR,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACA;AACI,WAASA,QAAT,CAAkBK,MAAlB,EAA0B;AACtBC,IAAAA,iBAAiB,CAACD,MAAD,CAAjB;AACA,SAAKE,OAAL,GAAeC,cAAc,CAACH,MAAD,CAA7B;AACA,SAAKI,QAAL,GAAgBC,eAAe,CAACL,MAAD,CAA/B;AACH;AACD;AACJ;AACA;AACA;;;AACIL,EAAAA,QAAQ,CAACW,KAAT,GAAiB,YAAY;AACzB,WAAOC,YAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIZ,EAAAA,QAAQ,CAACJ,SAAT,CAAmBiB,OAAnB,GAA6B,YAAY;AACrC,WAAOlC,MAAM,CAACmC,MAAP,CAAc,IAAd,EAAoBC,KAApB,CAA0B,UAAUxB,KAAV,EAAiB;AAAE,aAAOA,KAAK,IAAI,IAAhB;AAAuB,KAApE,CAAP;AACH,GAFD;;AAGA,SAAOS,QAAP;AACH,CAzB6B,EAA9B;;AA0BAD,OAAO,CAACC,QAAR,GAAmBA,QAAnB;AACA,IAAIY,YAAY,GAAG,IAAIZ,QAAJ,CAAa,EAAb,CAAnB;AACA;AACA;AACA;;AACA,SAASQ,cAAT,CAAwBH,MAAxB,EAAgC;AAC5B,MAAIJ,IAAI,CAACe,QAAL,CAAcX,MAAd,MAA0BA,MAAM,CAACE,OAAP,IAAkBF,MAAM,CAACE,OAAP,KAAmB,CAA/D,CAAJ,EAAuE;AACnEN,IAAAA,IAAI,CAACgB,qBAAL,CAA2BZ,MAAM,CAACE,OAAlC,EAA2C,qBAA3C;AACA,QAAIA,OAAO,GAAG,CAAC,GAAGH,SAAS,CAACc,GAAd,EAAmBb,MAAM,CAACE,OAA1B,CAAd;;AACA,QAAIA,OAAO,CAACY,MAAR,EAAJ,EAAsB;AAClB,YAAM,CAAC,GAAGhB,OAAO,CAACiB,QAAZ,EAAsB,wCAAtB,CAAN;AACH;;AACD,QAAIb,OAAO,CAACc,UAAR,EAAJ,EAA0B;AACtB,YAAM,CAAC,GAAGlB,OAAO,CAACiB,QAAZ,EAAsB,4CAAtB,CAAN;AACH;;AACD,WAAOb,OAAP;AACH;;AACD,SAAO,IAAP;AACH;AACD;AACA;AACA;;;AACA,SAASG,eAAT,CAAyBL,MAAzB,EAAiC;AAC7B,MAAIJ,IAAI,CAACe,QAAL,CAAcX,MAAd,KAAyBA,MAAM,CAACI,QAApC,EAA8C;AAC1C,QAAIA,QAAQ,GAAGJ,MAAM,CAACI,QAAtB;AACAR,IAAAA,IAAI,CAACqB,YAAL,CAAkBb,QAAlB,EAA4B,iBAA5B;;AACA,QAAI9B,MAAM,CAAC4C,IAAP,CAAYd,QAAZ,EAAsBe,MAAtB,KAAiC,CAArC,EAAwC;AACpC;AACA,aAAOf,QAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACD,SAASH,iBAAT,CAA2BD,MAA3B,EAAmC;AAC/B,MAAIA,MAAJ,EAAY;AACRJ,IAAAA,IAAI,CAACqB,YAAL,CAAkBjB,MAAlB,EAA0B,oBAA1B;AACH;AACJ","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TxConfig = void 0;\r\nvar util = __importStar(require(\"./util\"));\r\nvar error_1 = require(\"../error\");\r\nvar integer_1 = require(\"../integer\");\r\n/**\r\n * Internal holder of the transaction configuration.\r\n * It performs input validation and value conversion for further serialization by the Bolt protocol layer.\r\n * Users of the driver provide transaction configuration as regular objects `{timeout: 10, metadata: {key: 'value'}}`.\r\n * Driver converts such objects to {@link TxConfig} immediately and uses converted values everywhere.\r\n */\r\nvar TxConfig = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {Object} config the raw configuration object.\r\n     */\r\n    function TxConfig(config) {\r\n        assertValidConfig(config);\r\n        this.timeout = extractTimeout(config);\r\n        this.metadata = extractMetadata(config);\r\n    }\r\n    /**\r\n     * Get an empty config object.\r\n     * @return {TxConfig} an empty config.\r\n     */\r\n    TxConfig.empty = function () {\r\n        return EMPTY_CONFIG;\r\n    };\r\n    /**\r\n     * Check if this config object is empty. I.e. has no configuration values specified.\r\n     * @return {boolean} `true` if this object is empty, `false` otherwise.\r\n     */\r\n    TxConfig.prototype.isEmpty = function () {\r\n        return Object.values(this).every(function (value) { return value == null; });\r\n    };\r\n    return TxConfig;\r\n}());\r\nexports.TxConfig = TxConfig;\r\nvar EMPTY_CONFIG = new TxConfig({});\r\n/**\r\n * @return {Integer|null}\r\n */\r\nfunction extractTimeout(config) {\r\n    if (util.isObject(config) && (config.timeout || config.timeout === 0)) {\r\n        util.assertNumberOrInteger(config.timeout, 'Transaction timeout');\r\n        var timeout = (0, integer_1.int)(config.timeout);\r\n        if (timeout.isZero()) {\r\n            throw (0, error_1.newError)('Transaction timeout should not be zero');\r\n        }\r\n        if (timeout.isNegative()) {\r\n            throw (0, error_1.newError)('Transaction timeout should not be negative');\r\n        }\r\n        return timeout;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @return {object|null}\r\n */\r\nfunction extractMetadata(config) {\r\n    if (util.isObject(config) && config.metadata) {\r\n        var metadata = config.metadata;\r\n        util.assertObject(metadata, 'config.metadata');\r\n        if (Object.keys(metadata).length !== 0) {\r\n            // not an empty object\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction assertValidConfig(config) {\r\n    if (config) {\r\n        util.assertObject(config, 'Transaction config');\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}