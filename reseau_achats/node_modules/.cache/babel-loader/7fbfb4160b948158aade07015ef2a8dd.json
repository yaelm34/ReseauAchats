{"ast":null,"code":"/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n  return function (source) {\n    return source.lift(new ZipOperator(project));\n  };\n}","map":{"version":3,"mappings":"AAAA;AASA,SAAMA,WAAN,QAA6B,mBAA7B;OACE,SAAOC,MAAP,CAAQC,OAAR,EAAkC;AACnC;AAAA;AAAA","names":["ZipOperator","zipAll","project"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\operators\\zipAll.ts"],"sourcesContent":["import { ZipOperator } from '../observable/zip';\r\nimport { Observable } from '../Observable';\r\nimport { OperatorFunction, ObservableInput } from '../types';\r\n\r\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\r\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\r\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\r\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\r\n\r\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\r\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}