{"ast":null,"code":"/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    return source.lift.call(concatStatic.apply(void 0, [source].concat(observables)));\n  };\n}","map":{"version":3,"mappings":"AAAA;AA0BA,SAAMA,UAAUC,YAAhB,QAAsB,sBAAtB;OAA6B,kBAA2D;iBAAA,GAA3D;;OAAA,mCAA2DC;;AACtF;;AACD;AAAA;AAAA","names":["concat","concatStatic","_i"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\operators\\concat.ts"],"sourcesContent":["import {  concat as concatStatic } from '../observable/concat';\r\nimport { Observable } from '../Observable';\r\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\n\r\n/* tslint:disable:max-line-length */\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\r\n/** @deprecated Deprecated in favor of static concat. */\r\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * @deprecated Deprecated in favor of static {@link concat}.\r\n */\r\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\r\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}