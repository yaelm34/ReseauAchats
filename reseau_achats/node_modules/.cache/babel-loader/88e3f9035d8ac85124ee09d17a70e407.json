{"ast":null,"code":"/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n  return function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, hostReportError);\n    return subscriber;\n  };\n};","map":{"version":3,"mappings":"AACA;AAEA,SAAOA,eAAP,QAAkC,mBAAlC;OACE,IAAOC,kBACJ,GAAK;SACJ,UAAKC,UAAL,EAAwB;WACtB,gBAAgBC,KAAhB,EAAuB;AACvB,qBAAW,OAAX,EAAsB;AACvBD;AAEHA,kBAAc,SAAd;AAEG;AACL,OAAO,UAAUE,GAAV,EAAW;AAAA;AAAA,OAClBC;;;CAXA","names":["hostReportError","subscribeToPromise","subscriber","value","err","then"],"sources":["D:\\Documents\\EMA\\Mines A3\\NoSQL\\ReseauAchats\\reseau_achats\\node_modules\\rxjs\\src\\internal\\util\\subscribeToPromise.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\r\nimport { hostReportError } from './hostReportError';\r\n\r\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\r\n  promise.then(\r\n    (value) => {\r\n      if (!subscriber.closed) {\r\n        subscriber.next(value);\r\n        subscriber.complete();\r\n      }\r\n    },\r\n    (err: any) => subscriber.error(err)\r\n  )\r\n  .then(null, hostReportError);\r\n  return subscriber;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}